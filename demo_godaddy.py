"""
Demo GoDaddy Automation - T·ª± ƒë·ªông h√≥a mua domain
"""
from adspower_api_sync import AdsPowerAPISync
from browser_controller_sync import BrowserControllerSync
from godaddy_auto import GoDaddyAutomation, create_sample_billing_info, create_sample_payment_info
from loguru import logger


def demo_search_domains():
    """Demo t√¨m ki·∫øm domain"""
    logger.info("üîç Demo t√¨m ki·∫øm domain")
    
    api = AdsPowerAPISync()
    
    try:
        profile_id = "k14ryirf"
        
        with BrowserControllerSync(api) as browser:
            browser.connect_to_browser(
                profile_id=profile_id,
                headless=False,
                cdp_mask=True
            )
            
            godaddy = GoDaddyAutomation(browser)
            
            # T√¨m ki·∫øm m·ªôt domain
            domain_to_search = "my-awesome-domain-2024.com"
            result = godaddy.search_domain(domain_to_search)
            
            if result["status"] == "success":
                logger.info(f"‚úÖ T√¨m ki·∫øm th√†nh c√¥ng: {domain_to_search}")
                for domain_result in result["results"]:
                    logger.info(f"   - {domain_result['domain']}: {domain_result['price']} ({domain_result['availability']})")
            else:
                logger.warning(f"‚ö†Ô∏è T√¨m ki·∫øm th·∫•t b·∫°i: {result.get('error')}")
            
            browser.take_screenshot("godaddy_search.png")
            
    except Exception as e:
        logger.error(f"‚ùå L·ªói: {e}")
    finally:
        api.close()


def demo_bulk_search():
    """Demo t√¨m ki·∫øm h√†ng lo·∫°t domain"""
    logger.info("üìã Demo t√¨m ki·∫øm h√†ng lo·∫°t domain")
    
    api = AdsPowerAPISync()
    
    try:
        profile_id = "k14ft6fi"
        
        with BrowserControllerSync(api) as browser:
            browser.connect_to_browser(
                profile_id=profile_id,
                headless=False,
                cdp_mask=True
            )
            
            godaddy = GoDaddyAutomation(browser)
            
            # Danh s√°ch domain c·∫ßn t√¨m ki·∫øm
            domain_list = [
                "best-domain-ever.com",
                "awesome-website.net",
                "cool-site.org",
                "my-business.info",
                "startup-idea.co"
            ]
            
            results = godaddy.search_multiple_domains(domain_list)
            
            logger.info("üìä K·∫øt qu·∫£ t√¨m ki·∫øm:")
            available_count = 0
            
            for result in results:
                if result["status"] == "success":
                    available_domains = [r for r in result["results"] if "available" in r.get("availability", "").lower()]
                    if available_domains:
                        available_count += len(available_domains)
                        logger.info(f"   ‚úÖ {result['domain']}: {len(available_domains)} domain c√≥ s·∫µn")
                        for domain in available_domains:
                            logger.info(f"      - {domain['domain']}: {domain['price']}")
                    else:
                        logger.info(f"   üî¥ {result['domain']}: Kh√¥ng c√≥ domain n√†o c√≥ s·∫µn")
                else:
                    logger.info(f"   ‚ùå {result['domain']}: {result.get('error')}")
            
            logger.info(f"üìà T·ªïng c·ªông: {available_count} domain c√≥ s·∫µn")
            browser.take_screenshot("godaddy_bulk_search.png")
            
    except Exception as e:
        logger.error(f"‚ùå L·ªói: {e}")
    finally:
        api.close()


def demo_add_to_cart():
    """Demo th√™m domain v√†o gi·ªè h√†ng"""
    logger.info("üõí Demo th√™m domain v√†o gi·ªè h√†ng")
    
    api = AdsPowerAPISync()
    
    try:
        profile_id = "k14ft6fi"
        
        with BrowserControllerSync(api) as browser:
            browser.connect_to_browser(
                profile_id=profile_id,
                headless=False,
                cdp_mask=True
            )
            
            godaddy = GoDaddyAutomation(browser)
            
            # T√¨m ki·∫øm domain
            domain_to_search = "test-domain-for-cart.com"
            result = godaddy.search_domain(domain_to_search)
            
            if result["status"] == "success" and result["results"]:
                # Th√™m domain ƒë·∫ßu ti√™n v√†o gi·ªè h√†ng
                first_domain = result["results"][0]
                domain_name = first_domain["domain"]
                
                if godaddy.add_domain_to_cart(domain_name):
                    logger.success(f"‚úÖ ƒê√£ th√™m {domain_name} v√†o gi·ªè h√†ng")
                    
                    # L·∫•y th√¥ng tin gi·ªè h√†ng
                    cart_summary = godaddy.get_cart_summary()
                    logger.info("üõí Th√¥ng tin gi·ªè h√†ng:")
                    for item in cart_summary["items"]:
                        logger.info(f"   - {item['name']}: {item['price']}")
                    if cart_summary["total"]:
                        logger.info(f"   üí∞ T·ªïng: {cart_summary['total']}")
                    
                    browser.take_screenshot("godaddy_cart.png")
                else:
                    logger.warning(f"‚ö†Ô∏è Kh√¥ng th·ªÉ th√™m {domain_name} v√†o gi·ªè h√†ng")
            else:
                logger.warning("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y domain ƒë·ªÉ th√™m v√†o gi·ªè h√†ng")
            
    except Exception as e:
        logger.error(f"‚ùå L·ªói: {e}")
    finally:
        api.close()


def demo_purchase_flow():
    """Demo quy tr√¨nh mua domain (kh√¥ng th·ª±c s·ª± mua)"""
    logger.info("üí≥ Demo quy tr√¨nh mua domain")
    
    api = AdsPowerAPISync()
    
    try:
        profile_id = "k14ft6fi"
        
        with BrowserControllerSync(api) as browser:
            browser.connect_to_browser(
                profile_id=profile_id,
                headless=False,
                cdp_mask=True
            )
            
            godaddy = GoDaddyAutomation(browser)
            
            # Th√¥ng tin m·∫´u
            billing_info = create_sample_billing_info()
            payment_info = create_sample_payment_info()
            
            # Domain ƒë·ªÉ demo mua
            demo_domain = "demoflow.com"
            
            logger.info(f"üöÄ B·∫Øt ƒë·∫ßu demo mua domain: {demo_domain}")
            result = godaddy.buy_domain_complete(
                domain_name=demo_domain,
                billing_info=billing_info,
                payment_info=payment_info
            )
            
            logger.info("üìä K·∫øt qu·∫£ demo:")
            logger.info(f"   - Domain: {result['domain']}")
            logger.info(f"   - Status: {result['status']}")
            logger.info(f"   - Steps completed: {len(result['steps_completed'])}")
            
            for step in result['steps_completed']:
                logger.info(f"      ‚úÖ {step}")
            
            if result["error"]:
                logger.info(f"   - Error: {result['error']}")
            
            browser.take_screenshot("godaddy_purchase_flow.png")
            
    except Exception as e:
        logger.error(f"‚ùå L·ªói: {e}")
    finally:
        api.close()


def demo_custom_billing():
    """Demo v·ªõi th√¥ng tin thanh to√°n t√πy ch·ªânh"""
    logger.info("üë§ Demo v·ªõi th√¥ng tin thanh to√°n t√πy ch·ªânh")
    
    api = AdsPowerAPISync()
    
    try:
        profile_id = "k14ft6fi"
        
        with BrowserControllerSync(adspower_api=api) as browser:
            browser.connect_to_browser(
                profile_id=profile_id,
                headless=False,
                cdp_mask=True
            )
            
            godaddy = GoDaddyAutomation(browser)
            
            # Th√¥ng tin thanh to√°n t√πy ch·ªânh
            custom_billing_info = {
                "first_name": "Nguyen",
                "last_name": "Van A",
                "email": "nguyenvana@example.com",
                "phone": "+84901234567",
                "address": "123 Nguyen Hue Street",
                "city": "Ho Chi Minh City",
                "state": "HCM",
                "zip_code": "700000",
                "country": "VN"
            }
            
            custom_payment_info = {
                "card_number": "4111111111111111",
                "expiry_month": "06",
                "expiry_year": "2026",
                "cvv": "456",
                "cardholder_name": "NGUYEN VAN A"
            }
            
            # Domain ƒë·ªÉ demo
            demo_domain = "vietnam-domain-demo.com"
            
            logger.info(f"üöÄ Demo mua domain v·ªõi th√¥ng tin Vi·ªát Nam: {demo_domain}")
            result = godaddy.buy_domain_complete(
                domain_name=demo_domain,
                billing_info=custom_billing_info,
                payment_info=custom_payment_info
            )
            
            logger.info("üìä K·∫øt qu·∫£ demo:")
            logger.info(f"   - Domain: {result['domain']}")
            logger.info(f"   - Status: {result['status']}")
            logger.info(f"   - Steps completed: {', '.join(result['steps_completed'])}")
            
            browser.take_screenshot("godaddy_custom_billing.png")
            
    except Exception as e:
        logger.error(f"‚ùå L·ªói: {e}")
    finally:
        api.close()



def main():
    """Ch·∫°y t·∫•t c·∫£ demo GoDaddy"""
    logger.info("üåê B·∫Øt ƒë·∫ßu t·∫•t c·∫£ demo GoDaddy Automation")
    
    # demos = [
    #     ("T√¨m ki·∫øm domain", demo_search_domains),
    #     ("T√¨m ki·∫øm h√†ng lo·∫°t", demo_bulk_search),
    #     ("Th√™m v√†o gi·ªè h√†ng", demo_add_to_cart),
    #     ("Quy tr√¨nh mua domain", demo_purchase_flow),
    #     ("Th√¥ng tin thanh to√°n t√πy ch·ªânh", demo_custom_billing)
    # ]
    
    # for name, demo_func in demos:
    #     try:
    #         logger.info(f"üéØ B·∫Øt ƒë·∫ßu: {name}")
    #         demo_func()
    #         logger.success(f"‚úÖ Ho√†n th√†nh: {name}")
    #         logger.info("‚è≥ Ch·ªù 3 gi√¢y tr∆∞·ªõc demo ti·∫øp theo...")
    #         import time
    #         time.sleep(3)
    #     except Exception as e:
    #         logger.error(f"‚ùå L·ªói trong {name}: {e}")
    
    # logger.success("üéâ T·∫•t c·∫£ demo GoDaddy ƒë√£ ho√†n th√†nh!")

    demo_purchase_flow()


if __name__ == "__main__":
    main()
